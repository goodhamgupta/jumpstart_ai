defmodule JumpstartAi.Repo.Migrations.AddContactsAndNotes do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:contacts, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true

      add :user_id,
          references(:users,
            column: :id,
            name: "contacts_user_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :hubspot_id, :text, null: false
      add :email, :text
      add :firstname, :text
      add :lastname, :text
      add :phone, :text
      add :company, :text
      add :lifecycle_stage, :text
      add :notes_summary, :text
      add :hubspot_created_at, :utc_datetime_usec
      add :hubspot_updated_at, :utc_datetime_usec

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create unique_index(:contacts, [:user_id, :hubspot_id],
             name: "contacts_unique_hubspot_contact_index"
           )

    create unique_index(:contacts, [:user_id, :email], name: "contacts_unique_user_email_index")

    create table(:contact_notes, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true

      add :contact_id,
          references(:contacts,
            column: :id,
            name: "contact_notes_contact_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :hubspot_note_id, :text
      add :content, :text, null: false
      add :note_type, :text, default: "NOTE"
      add :hubspot_created_at, :utc_datetime_usec
      add :hubspot_updated_at, :utc_datetime_usec

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create unique_index(:contact_notes, [:contact_id, :hubspot_note_id],
             name: "contact_notes_unique_hubspot_note_index"
           )
  end

  def down do
    drop_if_exists unique_index(:contact_notes, [:contact_id, :hubspot_note_id],
                     name: "contact_notes_unique_hubspot_note_index"
                   )

    drop constraint(:contact_notes, "contact_notes_contact_id_fkey")

    drop table(:contact_notes)

    drop_if_exists unique_index(:contacts, [:user_id, :email],
                     name: "contacts_unique_user_email_index"
                   )

    drop_if_exists unique_index(:contacts, [:user_id, :hubspot_id],
                     name: "contacts_unique_hubspot_contact_index"
                   )

    drop constraint(:contacts, "contacts_user_id_fkey")

    drop table(:contacts)
  end
end
