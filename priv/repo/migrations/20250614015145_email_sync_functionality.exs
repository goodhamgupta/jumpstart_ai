defmodule JumpstartAi.Repo.Migrations.EmailSyncFunctionality do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    alter table(:users) do
      add :email_sync_status, :text
      add :emails_synced_at, :utc_datetime_usec
    end

    create table(:emails, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :gmail_id, :text, null: false
      add :thread_id, :text
      add :subject, :text
      add :from_email, :text
      add :from_name, :text
      add :to_email, :text
      add :date, :utc_datetime_usec
      add :snippet, :text
      add :body_text, :text
      add :body_html, :text
      add :label_ids, {:array, :text}, default: []

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :user_id,
          references(:users,
            column: :id,
            name: "emails_user_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create unique_index(:emails, [:gmail_id, :user_id],
             name: "emails_unique_gmail_id_per_user_index"
           )
  end

  def down do
    drop_if_exists unique_index(:emails, [:gmail_id, :user_id],
                     name: "emails_unique_gmail_id_per_user_index"
                   )

    drop constraint(:emails, "emails_user_id_fkey")

    drop table(:emails)

    alter table(:users) do
      remove :emails_synced_at
      remove :email_sync_status
    end
  end
end
